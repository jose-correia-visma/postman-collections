{
	"info": {
		"_postman_id": "12e06cbb-65d9-47d9-b6be-4563604a7c0b",
		"name": "Settings-API",
		"description": "Settings API, which serves as the backend service responsible for storing user-specific data utilized to populate the dashboards within the Reports module.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32137183"
	},
	"item": [
		{
			"name": "GetSettings",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{settings_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://settings.staging.e-conomic.com/v2/e-conomic/-1/:aggreement/user/:userId/dashboard_v2",
					"protocol": "https",
					"host": [
						"settings",
						"staging",
						"e-conomic",
						"com"
					],
					"path": [
						"v2",
						"e-conomic",
						"-1",
						":aggreement",
						"user",
						":userId",
						"dashboard_v2"
					],
					"variable": [
						{
							"key": "aggreement",
							"value": "179476"
						},
						{
							"key": "userId",
							"value": "admin-179472ces"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PutSettings",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{settings_token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"charts\": [\r\n        {\r\n            \"id\": \"3fdea0f4-c7ba-4b18-9e93-12d33c9fbb7b\",\r\n            \"name\": \"Top overdue sales invoices 2321321\",\r\n            \"chartType\": 4,\r\n            \"dataType\": 2\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://settings.staging.e-conomic.com/v2/e-conomic/-1/:aggreement/user/:userId/dashboard_v2",
					"protocol": "https",
					"host": [
						"settings",
						"staging",
						"e-conomic",
						"com"
					],
					"path": [
						"v2",
						"e-conomic",
						"-1",
						":aggreement",
						"user",
						":userId",
						"dashboard_v2"
					],
					"variable": [
						{
							"key": "aggreement",
							"value": "179476"
						},
						{
							"key": "userId",
							"value": "admin-179472ces"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteAllSettings",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{settings_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://settings.staging.e-conomic.com/v2/e-conomic/-1/:aggreement/user/:userId/dashboard_v2",
					"protocol": "https",
					"host": [
						"settings",
						"staging",
						"e-conomic",
						"com"
					],
					"path": [
						"v2",
						"e-conomic",
						"-1",
						":aggreement",
						"user",
						":userId",
						"dashboard_v2"
					],
					"variable": [
						{
							"key": "aggreement",
							"value": "179476"
						},
						{
							"key": "userId",
							"value": "admin-179472ces"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const options = {",
					"    url: \"https://id-staging.staging.e-conomic.com/connect/token\",",
					"    method: 'POST',",
					"    header: { 'content-type': 'application/json' },",
					"    body: {",
					"        mode: 'urlencoded',",
					"        urlencoded: [",
					"            { key: 'grant_type', value: 'client_credentials'},",
					"            { key: 'client_id', value: 'economicdev'},",
					"            { key: 'client_secret', value: 'jFgqteeojZb9JtujTOydb5QLUxdRdPSucOZmVxOKhHVWvQUrpqp3Ls9PzWaNXQoWdDk3u3uhFs9'},",
					"            { key: 'scopes', value: 'empty htmlconverter pdflibservice settings currency skatconnect translations'},",
					"        ]",
					"    }",
					"};",
					"",
					"pm.sendRequest(options, function (err, res) {",
					"    var jsonData = res.json();",
					"    if (err) {",
					"        console.log(err);",
					"    }",
					"    else {",
					"        var token = jsonData['access_token'];",
					"        pm.collectionVariables.set('settings_token', token);",
					"    }",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "settings_token",
			"value": ""
		}
	]
}